{"path":"docs/_draft_/Fundamentals-Of-Computer-Graphics-5th-CN-main/pic/Pasted image 20240322160129.png","text":"function bvh-node::create(object-array A, int AXIS) N= A length if (N = 1) then left=A[0] right = NULL 3 bbox = bounding-box(A[0]) elseif( N=2)0O0 /2 回 A @ DXL 日 日 X v left=Al[o] right = A[1] bbox = combine(bounding-box(A[0]), bounding-box(A[1])) else find the midpoint m of the bounding box of A along AXIS partition A into lists with lengths k and (N — k) surrounding m left = new bvh-node(A[0..k], (AXIS +1) mod 3) right = new bvh-node(A[k + 1..N — 1], (AXIS +1) mod 3) bbox = combine(left — bbox, right — bbox)","libVersion":"0.3.2","langs":"chi_sim+eng"}