{"path":"docs/_draft_/Fundamentals-Of-Computer-Graphics-5th-CN-main/pic/Pasted image 20240320100955.png","text":"L + [=]41 n(@y,2)= >, 3 2 Qrle—iy—j.z—k), i=|z] j=ly] 吊 囚 where (z,y,2) are the Cartesian coordinates of x, and Qigie(u, v, w) = w(u)w(v)w(w) ( - (u, v, w)), and w( is the cubic weighting function: 3 _ 342 i w(t) = | 技 一 3 昧 十 1 诅 阳 〈_1】 0 otherwise. The final piece is that I';;3, is a random unit vector for the lattice point (z, y, z) = (i, 4, k). Since we want any potential ijk, We use a pseudorandom table: Tij = G (6(i + ¢(7 + 6(K)))) , where G is a precomputed array of n random unit vectors, and ( 九 = P[i mod n] where P is an array of length n containing a permutation of the integers 0 through n — 1. In practice, Perlin reports n = 256 works well. To choose a random unit vector (v, vy, v, ), first set vy =2 —1, vy 二 26 一 工 v, =2¢\" 一 工 where 6567 are canonical random numbers (uniform in the interval [0,1)). Then, if (v2+v2+v?) < 1, make the vector a unit vector. Otherwise, keep setting it randomly until its length is less than one, and then make it a unit vector. This is an example of a rejection method, which will be discussed more in Chapter 13. Essentially, the “less than“test gets a random point in the unit sphere, and the vector for the origin to that point is uniformly random. That would not be true of random points in the cube, so we “get rid” of the corners with the test.","libVersion":"0.3.2","langs":"chi_sim+eng"}